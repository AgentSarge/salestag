#!/bin/bash

# SalesTag Project Pre-Build Validation Script
# Run this BEFORE setting up ESP-IDF to check project readiness

echo "üèóÔ∏è SalesTag Project Validation"
echo "================================"

PROJECT_ROOT="/Users/self/Desktop/salestag"
FIRMWARE_DIR="$PROJECT_ROOT/softwareV2"

# Check project structure
echo "üìÅ Checking project structure..."
if [ ! -d "$PROJECT_ROOT" ]; then
    echo "‚ùå Project root not found: $PROJECT_ROOT"
    exit 1
fi

if [ ! -d "$FIRMWARE_DIR" ]; then
    echo "‚ùå Firmware directory not found: $FIRMWARE_DIR"
    exit 1
fi

echo "‚úÖ Project directories found"

# Check required files
echo ""
echo "üìÑ Checking required files..."

REQUIRED_FILES=(
    "CMakeLists.txt"
    "main/CMakeLists.txt"
    "main/main.c"
    "main/recorder.c"
    "main/recorder.h"
    "main/ui.c"
    "main/ui.h"
    "main/sd_storage.c"
    "main/sd_storage.h"
    "main/wav_writer.c"
    "main/wav_writer.h"
    "main/audio_capture.c"
    "main/audio_capture.h"
    "partitions.csv"
)

missing_files=0
for file in "${REQUIRED_FILES[@]}"; do
    if [ ! -f "$FIRMWARE_DIR/$file" ]; then
        echo "‚ùå Missing: $file"
        missing_files=$((missing_files + 1))
    else
        echo "‚úÖ Found: $file"
    fi
done

if [ $missing_files -gt 0 ]; then
    echo "‚ùå $missing_files files missing - cannot proceed"
    exit 1
fi

# Check main.c content
echo ""
echo "üîç Validating main.c implementation..."
if grep -q "SalesTag Audio Recording System v1.0" "$FIRMWARE_DIR/main/main.c"; then
    echo "‚úÖ Updated main.c with recording system"
else
    echo "‚ùå main.c still contains old diagnostic code"
    exit 1
fi

if grep -q "RECORDING_DURATION_MS 10000" "$FIRMWARE_DIR/main/main.c"; then
    echo "‚úÖ 10-second recording duration configured"
else
    echo "‚ùå Recording duration not properly configured"
    exit 1
fi

# Check GPIO pin assignments
echo ""
echo "üîå Checking GPIO configuration..."
if grep -q "#define BTN_GPIO 4" "$FIRMWARE_DIR/main/main.c"; then
    echo "‚úÖ Button GPIO 4 configured"
else
    echo "‚ùå Button GPIO not found"
fi

if grep -q "#define LED_GPIO 40" "$FIRMWARE_DIR/main/main.c"; then
    echo "‚úÖ LED GPIO 40 configured"
else
    echo "‚ùå LED GPIO not found"
fi

if grep -q "GPIO 9.*ADC1_CH3.*MIC_DATA1" "$FIRMWARE_DIR/main/recorder.c"; then
    echo "‚úÖ Microphone 1 (GPIO 9) configured"
else
    echo "‚ùå Microphone 1 configuration not found"
fi

if grep -q "GPIO 12.*ADC1_CH6.*MIC_DATA2" "$FIRMWARE_DIR/main/recorder.c"; then
    echo "‚úÖ Microphone 2 (GPIO 12) configured"
else
    echo "‚ùå Microphone 2 configuration not found"
fi

# Check SD card pin configuration
echo ""
echo "üíæ Checking SD card configuration..."
sd_pins_found=0
if grep -q "#define SD_CS_PIN 39" "$FIRMWARE_DIR/main/sd_storage.h"; then
    echo "‚úÖ SD CS pin (GPIO 39) configured"
    sd_pins_found=$((sd_pins_found + 1))
fi

if grep -q "#define SD_MOSI_PIN 35" "$FIRMWARE_DIR/main/sd_storage.h"; then
    echo "‚úÖ SD MOSI pin (GPIO 35) configured"
    sd_pins_found=$((sd_pins_found + 1))
fi

if grep -q "#define SD_MISO_PIN 37" "$FIRMWARE_DIR/main/sd_storage.h"; then
    echo "‚úÖ SD MISO pin (GPIO 37) configured"
    sd_pins_found=$((sd_pins_found + 1))
fi

if grep -q "#define SD_SCLK_PIN 36" "$FIRMWARE_DIR/main/sd_storage.h"; then
    echo "‚úÖ SD SCLK pin (GPIO 36) configured"
    sd_pins_found=$((sd_pins_found + 1))
fi

if [ $sd_pins_found -eq 4 ]; then
    echo "‚úÖ All SD card pins configured correctly"
else
    echo "‚ùå SD card pin configuration incomplete ($sd_pins_found/4 found)"
fi

# Check audio format configuration
echo ""
echo "üéµ Checking audio format configuration..."
if grep -q "16000.*16.*2" "$FIRMWARE_DIR/main/main.c"; then
    echo "‚úÖ Audio format: 16kHz, 16-bit, 2 channels (stereo)"
else
    echo "‚ùå Audio format configuration not found"
fi

# Summary
echo ""
echo "üìã VALIDATION SUMMARY"
echo "====================="
echo "‚úÖ Project structure valid"
echo "‚úÖ All required files present"
echo "‚úÖ Main application updated with recording system"
echo "‚úÖ Hardware pin assignments configured"
echo "‚úÖ Audio format matches PRD requirements"

echo ""
echo "üöÄ PROJECT READY FOR ESP-IDF BUILD"
echo ""
echo "Next steps:"
echo "1. Set up ESP-IDF v5.2.2 development environment"
echo "2. Connect ESP32-S3 hardware with components"
echo "3. Run: idf.py build flash monitor"
echo "4. Test with button press for 10-second recording"
echo ""
echo "Use these guides:"
echo "- Build setup: docs/build-environment-setup.md"
echo "- Quick testing: docs/quick-start-testing.md"
echo "- Full validation: docs/phase1-testing-checklist.md"